{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSuspenseQuery } from '@tanstack/react-query';\nimport { BASE_URL, fetchInstance } from '../instance';\nexport const getProductOptionsPath = productId => `${BASE_URL}/api/products/${productId}/options`;\nexport const getProductOptions = async params => {\n  const response = await fetchInstance.get(getProductOptionsPath(params.productId));\n  return response.data;\n};\nexport const useGetProductOptions = ({\n  productId\n}) => {\n  _s();\n  return useSuspenseQuery({\n    queryKey: [getProductOptionsPath(productId)],\n    queryFn: () => getProductOptions({\n      productId\n    })\n  });\n};\n_s(useGetProductOptions, \"wenOueM1EC87NIZJSyP2AsMhIMU=\", false, function () {\n  return [useSuspenseQuery];\n});","map":{"version":3,"names":["useSuspenseQuery","BASE_URL","fetchInstance","getProductOptionsPath","productId","getProductOptions","params","response","get","data","useGetProductOptions","_s","queryKey","queryFn"],"sources":["C:/Users/jihwan/projects/react-deploy/src/api/hooks/useGetProductOptions.ts"],"sourcesContent":["import { useSuspenseQuery } from '@tanstack/react-query';\r\n\r\nimport type { ProductOptionsData } from '@/types';\r\n\r\nimport { BASE_URL, fetchInstance } from '../instance';\r\nimport type { ProductDetailRequestParams } from './useGetProductDetail';\r\n\r\ntype Props = ProductDetailRequestParams;\r\n\r\nexport type ProductOptionsResponseData = ProductOptionsData[];\r\n\r\nexport const getProductOptionsPath = (productId: string) =>\r\n  `${BASE_URL}/api/products/${productId}/options`;\r\n\r\nexport const getProductOptions = async (params: ProductDetailRequestParams) => {\r\n  const response = await fetchInstance.get<ProductOptionsResponseData>(\r\n    getProductOptionsPath(params.productId),\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const useGetProductOptions = ({ productId }: Props) => {\r\n  return useSuspenseQuery({\r\n    queryKey: [getProductOptionsPath(productId)],\r\n    queryFn: () => getProductOptions({ productId }),\r\n  });\r\n};\r\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,uBAAuB;AAIxD,SAASC,QAAQ,EAAEC,aAAa,QAAQ,aAAa;AAOrD,OAAO,MAAMC,qBAAqB,GAAIC,SAAiB,IACpD,GAAEH,QAAS,iBAAgBG,SAAU,UAAS;AAEjD,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,MAAkC,IAAK;EAC7E,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAG,CACtCL,qBAAqB,CAACG,MAAM,CAACF,SAAS,CACxC,CAAC;EACD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEN;AAAiB,CAAC,KAAK;EAAAO,EAAA;EAC5D,OAAOX,gBAAgB,CAAC;IACtBY,QAAQ,EAAE,CAACT,qBAAqB,CAACC,SAAS,CAAC,CAAC;IAC5CS,OAAO,EAAEA,CAAA,KAAMR,iBAAiB,CAAC;MAAED;IAAU,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC;AAACO,EAAA,CALWD,oBAAoB;EAAA,QACxBV,gBAAgB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}