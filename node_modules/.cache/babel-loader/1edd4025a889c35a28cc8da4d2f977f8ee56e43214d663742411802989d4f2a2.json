{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.request = void 0;\nvar debug_1 = require(\"debug\");\nvar NodeClientRequest_1 = require(\"./NodeClientRequest\");\nvar normalizeClientRequestArgs_1 = require(\"./utils/normalizeClientRequestArgs\");\nvar log = debug_1.debug('http request');\nfunction request(protocol, options) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    log('request call (protocol \"%s\"):', protocol, args);\n    var clientRequestArgs = normalizeClientRequestArgs_1.normalizeClientRequestArgs.apply(void 0, __spreadArray([protocol + \":\"], __read(args)));\n    return new NodeClientRequest_1.NodeClientRequest(clientRequestArgs, options);\n  };\n}\nexports.request = request;","map":{"version":3,"names":["debug_1","require","NodeClientRequest_1","normalizeClientRequestArgs_1","log","debug","request","protocol","options","args","_i","arguments","length","clientRequestArgs","normalizeClientRequestArgs","apply","__spreadArray","__read","NodeClientRequest","exports"],"sources":["/Users/kyoungseo/Desktop/4학년/카테캠/step2/kakao-gift5/react-product-login/node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/http.request.ts"],"sourcesContent":["import { debug } from 'debug'\nimport { ClientRequest } from 'http'\nimport {\n  NodeClientOptions,\n  NodeClientRequest,\n  Protocol,\n} from './NodeClientRequest'\nimport {\n  normalizeClientRequestArgs,\n  ClientRequestArgs,\n} from './utils/normalizeClientRequestArgs'\n\nconst log = debug('http request')\n\nexport function request(protocol: Protocol, options: NodeClientOptions) {\n  return (...args: ClientRequestArgs): ClientRequest => {\n    log('request call (protocol \"%s\"):', protocol, args)\n\n    const clientRequestArgs = normalizeClientRequestArgs(\n      `${protocol}:`,\n      ...args\n    )\n    return new NodeClientRequest(clientRequestArgs, options)\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,mBAAA,GAAAD,OAAA;AAKA,IAAAE,4BAAA,GAAAF,OAAA;AAKA,IAAMG,GAAG,GAAGJ,OAAA,CAAAK,KAAK,CAAC,cAAc,CAAC;AAEjC,SAAgBC,OAAOA,CAACC,QAAkB,EAAEC,OAA0B;EACpE,OAAO;IAAC,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAA0B,EAA1BA,EAAA,GAAAC,SAAA,CAAAC,MAA0B,EAA1BF,EAAA,EAA0B;MAA1BD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACNN,GAAG,CAAC,+BAA+B,EAAEG,QAAQ,EAAEE,IAAI,CAAC;IAEpD,IAAMI,iBAAiB,GAAGV,4BAAA,CAAAW,0BAA0B,CAAAC,KAAA,SAAAC,aAAA,EAC/CT,QAAQ,MAAG,GAAAU,MAAA,CACXR,IAAI,GACR;IACD,OAAO,IAAIP,mBAAA,CAAAgB,iBAAiB,CAACL,iBAAiB,EAAEL,OAAO,CAAC;EAC1D,CAAC;AACH;AAVAW,OAAA,CAAAb,OAAA,GAAAA,OAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}