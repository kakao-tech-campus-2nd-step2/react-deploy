{"ast":null,"code":"var _jsxFileName = \"/Users/kyoungseo/Desktop/4\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB/\\u110F\\u1161\\u1110\\u1166\\u110F\\u1162\\u11B7/step2/kakao-gift5/react-product-login/src/components/common/layouts/Grid/index.tsx\";\nimport styled from '@emotion/styled';\nimport { vars } from '@/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Grid = ({\n  children,\n  columns,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    columns: columns,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\nconst Wrapper = styled.div({\n  width: '100%',\n  display: 'grid'\n}, ({\n  gap\n}) => ({\n  gap: gap ? `${gap}px` : '0'\n}), ({\n  columns\n}) => {\n  if (typeof columns === 'number') {\n    return {\n      gridTemplateColumns: `repeat(${columns}, 1fr)`\n    };\n  }\n  const breakpoints = Object.keys(columns);\n  return breakpoints.map(breakpoint => {\n    return `@media screen and (min-width: ${vars.breakpoints[breakpoint]}) { grid-template-columns: repeat(${columns[breakpoint]}, 1fr); }`;\n  }).join(' ');\n});\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["styled","vars","jsxDEV","_jsxDEV","Grid","children","columns","props","Wrapper","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","width","display","gap","gridTemplateColumns","breakpoints","Object","keys","map","breakpoint","join","_c2","$RefreshReg$"],"sources":["/Users/kyoungseo/Desktop/4학년/카테캠/step2/kakao-gift5/react-product-login/src/components/common/layouts/Grid/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { vars } from '@/styles';\n\ntype ResponseGridStyle = {\n  [key in keyof typeof vars.breakpoints]?: number;\n};\n\ntype Props = {\n  columns: number | ResponseGridStyle;\n  gap?: number;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Grid: React.FC<Props> = ({ children, columns, ...props }: Props) => {\n  return (\n    <Wrapper columns={columns} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div<Pick<Props, 'columns' | 'gap'>>(\n  {\n    width: '100%',\n    display: 'grid',\n  },\n  ({ gap }) => ({\n    gap: gap ? `${gap}px` : '0',\n  }),\n  ({ columns }) => {\n    if (typeof columns === 'number') {\n      return {\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      };\n    }\n\n    const breakpoints = Object.keys(columns) as (keyof typeof vars.breakpoints)[];\n    return breakpoints\n      .map((breakpoint) => {\n        return `@media screen and (min-width: ${vars.breakpoints[breakpoint]}) { grid-template-columns: repeat(${columns[breakpoint]}, 1fr); }`;\n      })\n      .join(' ');\n  },\n);\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,iBAAiB;AAEpC,SAASC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWhC,OAAO,MAAMC,IAAqB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAE,GAAGC;AAAa,CAAC,KAAK;EAC/E,oBACEJ,OAAA,CAACK,OAAO;IAACF,OAAO,EAAEA,OAAQ;IAAA,GAAKC,KAAK;IAAAF,QAAA,EACjCA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACC,EAAA,GANWT,IAAqB;AAQlC,MAAMI,OAAO,GAAGR,MAAM,CAACc,GAAG,CACxB;EACEC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC,EACD,CAAC;EAAEC;AAAI,CAAC,MAAM;EACZA,GAAG,EAAEA,GAAG,GAAI,GAAEA,GAAI,IAAG,GAAG;AAC1B,CAAC,CAAC,EACF,CAAC;EAAEX;AAAQ,CAAC,KAAK;EACf,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC/B,OAAO;MACLY,mBAAmB,EAAG,UAASZ,OAAQ;IACzC,CAAC;EACH;EAEA,MAAMa,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACf,OAAO,CAAsC;EAC7E,OAAOa,WAAW,CACfG,GAAG,CAAEC,UAAU,IAAK;IACnB,OAAQ,iCAAgCtB,IAAI,CAACkB,WAAW,CAACI,UAAU,CAAE,qCAAoCjB,OAAO,CAACiB,UAAU,CAAE,WAAU;EACzI,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;AACd,CACF,CAAC;AAACC,GAAA,GAtBIjB,OAAO;AAAA,IAAAK,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}