{"ast":null,"code":"var _jsxFileName = \"/Users/jiwon/Desktop/KaKaoTech/Step2/6\\u110C\\u116E\\u110E\\u1161 \\u1100\\u116A\\u110C\\u1166/react-deploy/src/provider/ApiSelection/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// baseUrl 을 전역으로 관리해서, 다르게 서버 주소 사용\n\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BaseUrlContext = /*#__PURE__*/createContext(undefined);\nexport const BaseUrlProvider = ({\n  children\n}) => {\n  _s();\n  const [baseUrl, setBaseUrl] = useState('');\n  return /*#__PURE__*/_jsxDEV(BaseUrlContext.Provider, {\n    value: {\n      baseUrl,\n      setBaseUrl\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseUrlProvider, \"4djvKBkab+K2KVqmngtfltzV9Xk=\");\n_c = BaseUrlProvider;\nexport const useBaseUrl = () => {\n  _s2();\n  const context = useContext(BaseUrlContext);\n  if (!context) {\n    throw new Error('useBaseUrl must be used within a BaseUrlProvider');\n  }\n  return context;\n};\n_s2(useBaseUrl, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BaseUrlProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","BaseUrlContext","undefined","BaseUrlProvider","children","_s","baseUrl","setBaseUrl","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBaseUrl","_s2","context","Error","$RefreshReg$"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/6주차 과제/react-deploy/src/provider/ApiSelection/index.tsx"],"sourcesContent":["// baseUrl 을 전역으로 관리해서, 다르게 서버 주소 사용\nimport type { ReactNode } from 'react';\nimport { createContext, useContext, useState } from 'react';\n\ntype BaseUrlContextType = {\n  baseUrl: string;\n  setBaseUrl: (url: string) => void;\n};\n\nconst BaseUrlContext = createContext<BaseUrlContextType | undefined>(undefined);\n\nexport const BaseUrlProvider = ({ children }: { children: ReactNode }) => {\n  const [baseUrl, setBaseUrl] = useState<string>('');\n\n  return (\n    <BaseUrlContext.Provider value={{ baseUrl, setBaseUrl }}>{children}</BaseUrlContext.Provider>\n  );\n};\n\nexport const useBaseUrl = () => {\n  const context = useContext(BaseUrlContext);\n  if (!context) {\n    throw new Error('useBaseUrl must be used within a BaseUrlProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5D,MAAMC,cAAc,gBAAGL,aAAa,CAAiCM,SAAS,CAAC;AAE/E,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAElD,oBACEE,OAAA,CAACC,cAAc,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,OAAO;MAAEC;IAAW,CAAE;IAAAH,QAAA,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA0B,CAAC;AAEjG,CAAC;AAACR,EAAA,CANWF,eAAe;AAAAW,EAAA,GAAfX,eAAe;AAQ5B,OAAO,MAAMY,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAMC,OAAO,GAAGpB,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,UAAU;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}