{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jihwan\\\\projects\\\\react-deploy\\\\src\\\\provider\\\\Auth\\\\index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { authSessionStorage } from '@/utils/storage';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const currentAuthToken = authSessionStorage.get();\n  const [isReady, setIsReady] = useState(!currentAuthToken);\n  const [authInfo, setAuthInfo] = useState(undefined);\n  useEffect(() => {\n    if (currentAuthToken) {\n      setAuthInfo({\n        id: currentAuthToken,\n        // TODO: 임시로 로그인 페이지에서 입력한 이름을 ID, token, name으로 사용\n        name: currentAuthToken,\n        token: currentAuthToken\n      });\n      setIsReady(true);\n    }\n  }, [currentAuthToken]);\n  if (!isReady) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authInfo,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"M5A/SL2vVZ6RiNCbEAu+dHapM00=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","authSessionStorage","Fragment","_Fragment","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","currentAuthToken","get","isReady","setIsReady","authInfo","setAuthInfo","id","name","token","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/jihwan/projects/react-deploy/src/provider/Auth/index.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nimport { authSessionStorage } from '@/utils/storage';\r\n\r\ntype AuthInfo = {\r\n  id: string;\r\n  name: string;\r\n  token: string;\r\n};\r\n\r\nexport const AuthContext = createContext<AuthInfo | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const currentAuthToken = authSessionStorage.get();\r\n  const [isReady, setIsReady] = useState(!currentAuthToken);\r\n\r\n  const [authInfo, setAuthInfo] = useState<AuthInfo | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (currentAuthToken) {\r\n      setAuthInfo({\r\n        id: currentAuthToken, // TODO: 임시로 로그인 페이지에서 입력한 이름을 ID, token, name으로 사용\r\n        name: currentAuthToken,\r\n        token: currentAuthToken,\r\n      });\r\n      setIsReady(true);\r\n    }\r\n  }, [currentAuthToken]);\r\n\r\n  if (!isReady) return <></>;\r\n  return <AuthContext.Provider value={authInfo}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEtE,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQrD,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAuBU,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAMC,gBAAgB,GAAGV,kBAAkB,CAACW,GAAG,CAAC,CAAC;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAACW,gBAAgB,CAAC;EAEzD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAuBO,SAAS,CAAC;EAEzER,SAAS,CAAC,MAAM;IACd,IAAIY,gBAAgB,EAAE;MACpBK,WAAW,CAAC;QACVC,EAAE,EAAEN,gBAAgB;QAAE;QACtBO,IAAI,EAAEP,gBAAgB;QACtBQ,KAAK,EAAER;MACT,CAAC,CAAC;MACFG,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,IAAI,CAACE,OAAO,EAAE,oBAAOR,OAAA,CAAAF,SAAA,mBAAI,CAAC;EAC1B,oBAAOE,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAEN,QAAS;IAAAN,QAAA,EAAEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACjF,CAAC;AAACf,EAAA,CAnBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAqBzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACQ,WAAW,CAAC;AAAA;AAACsB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}