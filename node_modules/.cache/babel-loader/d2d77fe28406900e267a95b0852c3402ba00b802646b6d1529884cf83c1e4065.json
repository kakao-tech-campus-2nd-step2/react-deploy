{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jihwan\\\\projects\\\\react-deploy\\\\src\\\\components\\\\common\\\\layouts\\\\Container\\\\index.tsx\";\nimport styled from '@emotion/styled';\nimport { forwardRef } from 'react';\nimport { vars } from '@/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = /*#__PURE__*/forwardRef(_c = ({\n  children,\n  maxWidth,\n  flexDirection,\n  justifyContent,\n  alignItems,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      className: \"inner\",\n      maxWidth: maxWidth,\n      flexDirection: flexDirection,\n      justifyContent: justifyContent,\n      alignItems: alignItems,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Container;\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = Wrapper;\nconst Inner = styled.div`\n  width: 100%;\n  max-width: ${({\n  maxWidth\n}) => maxWidth !== null && maxWidth !== void 0 ? maxWidth : vars.breakpoints.md};\n  display: flex;\n  flex-direction: ${({\n  flexDirection\n}) => flexDirection !== null && flexDirection !== void 0 ? flexDirection : 'column'};\n  justify-content: ${({\n  justifyContent\n}) => justifyContent !== null && justifyContent !== void 0 ? justifyContent : 'flex-start'};\n  align-items: ${({\n  alignItems\n}) => alignItems !== null && alignItems !== void 0 ? alignItems : 'flex-start'};\n`;\n_c4 = Inner;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container$forwardRef\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"Inner\");","map":{"version":3,"names":["styled","forwardRef","vars","jsxDEV","_jsxDEV","Container","_c","children","maxWidth","flexDirection","justifyContent","alignItems","props","ref","Wrapper","Inner","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","div","_c3","breakpoints","md","_c4","$RefreshReg$"],"sources":["C:/Users/jihwan/projects/react-deploy/src/components/common/layouts/Container/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { forwardRef } from 'react';\r\n\r\nimport { vars } from '@/styles';\r\n\r\ntype Props = {\r\n  maxWidth?: string;\r\n  flexDirection?: 'row' | 'column';\r\n  justifyContent?: 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around';\r\n  alignItems?: 'center' | 'flex-start' | 'flex-end' | 'baseline' | 'stretch';\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\n\r\nexport const Container: React.FC<Props> = forwardRef(\r\n  (\r\n    { children, maxWidth, flexDirection, justifyContent, alignItems, ...props }: Props,\r\n    ref: React.Ref<HTMLDivElement>,\r\n  ) => {\r\n    return (\r\n      <Wrapper ref={ref} {...props}>\r\n        <Inner\r\n          className=\"inner\"\r\n          maxWidth={maxWidth}\r\n          flexDirection={flexDirection}\r\n          justifyContent={justifyContent}\r\n          alignItems={alignItems}\r\n        >\r\n          {children}\r\n        </Inner>\r\n      </Wrapper>\r\n    );\r\n  },\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Inner = styled.div<\r\n  Pick<Props, 'maxWidth' | 'flexDirection' | 'justifyContent' | 'alignItems'>\r\n>`\r\n  width: 100%;\r\n  max-width: ${({ maxWidth }) => maxWidth ?? vars.breakpoints.md};\r\n  display: flex;\r\n  flex-direction: ${({ flexDirection }) => flexDirection ?? 'column'};\r\n  justify-content: ${({ justifyContent }) => justifyContent ?? 'flex-start'};\r\n  align-items: ${({ alignItems }) => alignItems ?? 'flex-start'};\r\n`;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAShC,OAAO,MAAMC,SAA0B,gBAAGJ,UAAU,CAAAK,EAAA,GAClDA,CACE;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,cAAc;EAAEC,UAAU;EAAE,GAAGC;AAAa,CAAC,EAClFC,GAA8B,KAC3B;EACH,oBACET,OAAA,CAACU,OAAO;IAACD,GAAG,EAAEA,GAAI;IAAA,GAAKD,KAAK;IAAAL,QAAA,eAC1BH,OAAA,CAACW,KAAK;MACJC,SAAS,EAAC,OAAO;MACjBR,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA,aAAc;MAC7BC,cAAc,EAAEA,cAAe;MAC/BC,UAAU,EAAEA,UAAW;MAAAJ,QAAA,EAEtBA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CACF,CAAC;AAACC,GAAA,GAnBWhB,SAA0B;AAqBvC,MAAMS,OAAO,GAAGd,MAAM,CAACsB,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIT,OAAO;AAOb,MAAMC,KAAK,GAAGf,MAAM,CAACsB,GAEnB;AACF;AACA,eAAe,CAAC;EAAEd;AAAS,CAAC,KAAKA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIN,IAAI,CAACsB,WAAW,CAACC,EAAG;AACjE;AACA,oBAAoB,CAAC;EAAEhB;AAAc,CAAC,KAAKA,aAAa,aAAbA,aAAa,cAAbA,aAAa,GAAI,QAAS;AACrE,qBAAqB,CAAC;EAAEC;AAAe,CAAC,KAAKA,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,YAAa;AAC5E,iBAAiB,CAAC;EAAEC;AAAW,CAAC,KAAKA,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,YAAa;AAChE,CAAC;AAACe,GAAA,GATIX,KAAK;AAAA,IAAAT,EAAA,EAAAe,GAAA,EAAAE,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}