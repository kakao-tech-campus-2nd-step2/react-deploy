{"ast":null,"code":"var _jsxFileName = \"/Users/jiwon/Desktop/KaKaoTech/Step2/6\\u110C\\u116E\\u110E\\u1161 \\u1100\\u116A\\u110C\\u1166/react-deploy/src/components/features/Order/OrderForm/index.tsx\",\n  _s = $RefreshSig$();\nimport styled from '@emotion/styled';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { Spacing } from '@/components/common/layouts/Spacing';\nimport { SplitLayout } from '@/components/common/layouts/SplitLayout';\nimport { HEADER_HEIGHT } from '../../Layout/Header';\nimport { GoodsInfo } from './GoodsInfo';\nimport { OrderFormMessageCard } from './MessageCard';\nimport { OrderFormOrderInfo } from './OrderInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderForm = ({\n  orderHistory\n}) => {\n  _s();\n  const {\n    id,\n    count\n  } = orderHistory;\n  const methods = useForm({\n    defaultValues: {\n      productId: id,\n      productQuantity: count,\n      senderId: 0,\n      receiverId: 0,\n      hasCashReceipt: false\n    }\n  });\n  const {\n    handleSubmit\n  } = methods;\n  const handleForm = values => {\n    const {\n      errorMessage,\n      isValid\n    } = validateOrderForm(values);\n    if (!isValid) {\n      alert(errorMessage);\n      return;\n    }\n    console.log('values', values);\n    alert('주문이 완료되었습니다.');\n  };\n\n  // Submit 버튼을 누르면 form이 제출되는 것을 방지하기 위한 함수\n  const preventEnterKeySubmission = e => {\n    const target = e.target;\n    if (e.key === 'Enter' && !['TEXTAREA'].includes(target.tagName)) {\n      e.preventDefault();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    ...methods,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit(handleForm),\n      onKeyDown: preventEnterKeySubmission,\n      children: /*#__PURE__*/_jsxDEV(SplitLayout, {\n        sidebar: /*#__PURE__*/_jsxDEV(OrderFormOrderInfo, {\n          orderHistory: orderHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Wrapper, {\n          children: [/*#__PURE__*/_jsxDEV(OrderFormMessageCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n            height: 8,\n            backgroundColor: \"#ededed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoodsInfo, {\n            orderHistory: orderHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderForm, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n_c = OrderForm;\nconst validateOrderForm = values => {\n  if (values.hasCashReceipt) {\n    if (!values.cashReceiptNumber) {\n      return {\n        errorMessage: '현금영수증 번호를 입력해주세요.',\n        isValid: false\n      };\n    }\n    if (!/^\\d+$/.test(values.cashReceiptNumber)) {\n      return {\n        errorMessage: '현금영수증 번호는 숫자로만 입력해주세요.',\n        isValid: false\n      };\n    }\n  }\n  if (values.messageCardTextMessage.length < 1) {\n    return {\n      errorMessage: '메시지를 입력해주세요.',\n      isValid: false\n    };\n  }\n  if (values.messageCardTextMessage.length > 100) {\n    return {\n      errorMessage: '메시지는 100자 이내로 입력해주세요.',\n      isValid: false\n    };\n  }\n  return {\n    isValid: true\n  };\n};\nconst Wrapper = styled.div`\n  border-left: 1px solid #e5e5e5;\n  height: calc(100vh - ${HEADER_HEIGHT});\n`;\n_c2 = Wrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"OrderForm\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["styled","FormProvider","useForm","Spacing","SplitLayout","HEADER_HEIGHT","GoodsInfo","OrderFormMessageCard","OrderFormOrderInfo","jsxDEV","_jsxDEV","OrderForm","orderHistory","_s","id","count","methods","defaultValues","productId","productQuantity","senderId","receiverId","hasCashReceipt","handleSubmit","handleForm","values","errorMessage","isValid","validateOrderForm","alert","console","log","preventEnterKeySubmission","e","target","key","includes","tagName","preventDefault","children","action","onSubmit","onKeyDown","sidebar","fileName","_jsxFileName","lineNumber","columnNumber","Wrapper","height","backgroundColor","_c","cashReceiptNumber","test","messageCardTextMessage","length","div","_c2","$RefreshReg$"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/6주차 과제/react-deploy/src/components/features/Order/OrderForm/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FormProvider, useForm } from 'react-hook-form';\n\nimport { Spacing } from '@/components/common/layouts/Spacing';\nimport { SplitLayout } from '@/components/common/layouts/SplitLayout';\nimport type { OrderFormData, OrderHistory } from '@/types';\n\nimport { HEADER_HEIGHT } from '../../Layout/Header';\nimport { GoodsInfo } from './GoodsInfo';\nimport { OrderFormMessageCard } from './MessageCard';\nimport { OrderFormOrderInfo } from './OrderInfo';\n\ntype Props = {\n  orderHistory: OrderHistory;\n};\n\nexport const OrderForm = ({ orderHistory }: Props) => {\n  const { id, count } = orderHistory;\n\n  const methods = useForm<OrderFormData>({\n    defaultValues: {\n      productId: id,\n      productQuantity: count,\n      senderId: 0,\n      receiverId: 0,\n      hasCashReceipt: false,\n    },\n  });\n  const { handleSubmit } = methods;\n\n  const handleForm = (values: OrderFormData) => {\n    const { errorMessage, isValid } = validateOrderForm(values);\n\n    if (!isValid) {\n      alert(errorMessage);\n      return;\n    }\n\n    console.log('values', values);\n    alert('주문이 완료되었습니다.');\n  };\n\n  // Submit 버튼을 누르면 form이 제출되는 것을 방지하기 위한 함수\n  const preventEnterKeySubmission = (e: React.KeyboardEvent<HTMLFormElement>) => {\n    const target = e.target as HTMLFormElement;\n    if (e.key === 'Enter' && !['TEXTAREA'].includes(target.tagName)) {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form action=\"\" onSubmit={handleSubmit(handleForm)} onKeyDown={preventEnterKeySubmission}>\n        <SplitLayout sidebar={<OrderFormOrderInfo orderHistory={orderHistory} />}>\n          <Wrapper>\n            <OrderFormMessageCard />\n            <Spacing height={8} backgroundColor=\"#ededed\" />\n            <GoodsInfo orderHistory={orderHistory} />\n          </Wrapper>\n        </SplitLayout>\n      </form>\n    </FormProvider>\n  );\n};\n\nconst validateOrderForm = (values: OrderFormData): { errorMessage?: string; isValid: boolean } => {\n  if (values.hasCashReceipt) {\n    if (!values.cashReceiptNumber) {\n      return {\n        errorMessage: '현금영수증 번호를 입력해주세요.',\n        isValid: false,\n      };\n    }\n\n    if (!/^\\d+$/.test(values.cashReceiptNumber)) {\n      return {\n        errorMessage: '현금영수증 번호는 숫자로만 입력해주세요.',\n        isValid: false,\n      };\n    }\n  }\n\n  if (values.messageCardTextMessage.length < 1) {\n    return {\n      errorMessage: '메시지를 입력해주세요.',\n      isValid: false,\n    };\n  }\n\n  if (values.messageCardTextMessage.length > 100) {\n    return {\n      errorMessage: '메시지는 100자 이내로 입력해주세요.',\n      isValid: false,\n    };\n  }\n\n  return {\n    isValid: true,\n  };\n};\n\nconst Wrapper = styled.div`\n  border-left: 1px solid #e5e5e5;\n  height: calc(100vh - ${HEADER_HEIGHT});\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}