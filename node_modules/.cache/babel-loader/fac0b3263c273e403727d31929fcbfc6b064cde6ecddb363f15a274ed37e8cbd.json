{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUrlByRequestOptions = exports.DEFAULT_PATH = void 0;\nvar http_1 = require(\"http\");\nvar debug = require('debug')('utils getUrlByRequestOptions');\nexports.DEFAULT_PATH = '/';\nvar DEFAULT_PROTOCOL = 'http:';\nvar DEFAULT_HOST = 'localhost';\nvar DEFAULT_PORT = 80;\nvar SSL_PORT = 443;\nfunction getAgent(options) {\n  return options.agent instanceof http_1.Agent ? options.agent : undefined;\n}\nfunction getProtocolByRequestOptions(options) {\n  var _a, _b;\n  if (options.protocol) {\n    return options.protocol;\n  }\n  var agent = getAgent(options);\n  var agentProtocol = (_a = agent) === null || _a === void 0 ? void 0 : _a.protocol;\n  if (agentProtocol) {\n    return agentProtocol;\n  }\n  var port = getPortByRequestOptions(options);\n  var isSecureRequest = options.cert || port === SSL_PORT;\n  return isSecureRequest ? 'https:' : ((_b = options.uri) === null || _b === void 0 ? void 0 : _b.protocol) || DEFAULT_PROTOCOL;\n}\nfunction getPortByRequestOptions(options) {\n  var _a, _b;\n  var agent = getAgent(options);\n  var agentPort = ((_a = agent) === null || _a === void 0 ? void 0 : _a.options.port) || ((_b = agent) === null || _b === void 0 ? void 0 : _b.defaultPort);\n  var optionsPort = options.port;\n  if (optionsPort || agentPort) {\n    var explicitPort = optionsPort || agentPort || DEFAULT_PORT;\n    return Number(explicitPort);\n  }\n}\nfunction getHostByRequestOptions(options) {\n  return options.hostname || options.host || DEFAULT_HOST;\n}\nfunction getAuthByRequestOptions(options) {\n  if (options.auth) {\n    var _a = __read(options.auth.split(':'), 2),\n      username = _a[0],\n      password = _a[1];\n    return {\n      username: username,\n      password: password\n    };\n  }\n}\n/**\n * Creates a `URL` instance from a given `RequestOptions` object.\n */\nfunction getUrlByRequestOptions(options) {\n  debug('request options', options);\n  var protocol = getProtocolByRequestOptions(options);\n  var host = getHostByRequestOptions(options);\n  var port = getPortByRequestOptions(options);\n  var path = options.path || exports.DEFAULT_PATH;\n  var auth = getAuthByRequestOptions(options);\n  debug('protocol', protocol);\n  debug('host', host);\n  debug('port', port);\n  debug('path', path);\n  var baseUrl = protocol + \"//\" + host;\n  debug('base URL:', baseUrl);\n  var url = options.uri ? new URL(options.uri.href) : new URL(path, baseUrl);\n  if (port) {\n    debug('detected explicit port', port);\n    url.port = port.toString();\n  }\n  if (auth) {\n    debug('resolved auth', auth);\n    url.username = auth.username;\n    url.password = auth.password;\n  }\n  debug('created URL:', url);\n  return url;\n}\nexports.getUrlByRequestOptions = getUrlByRequestOptions;","map":{"version":3,"names":["http_1","require","debug","exports","DEFAULT_PATH","DEFAULT_PROTOCOL","DEFAULT_HOST","DEFAULT_PORT","SSL_PORT","getAgent","options","agent","Agent","undefined","getProtocolByRequestOptions","protocol","agentProtocol","_a","port","getPortByRequestOptions","isSecureRequest","cert","_b","uri","agentPort","defaultPort","optionsPort","explicitPort","Number","getHostByRequestOptions","hostname","host","getAuthByRequestOptions","auth","__read","split","username","password","getUrlByRequestOptions","path","baseUrl","url","URL","href","toString"],"sources":["/Users/kyoungseo/Desktop/4학년/카테캠/step2/kakao-gift5/react-product-login/node_modules/@mswjs/interceptors/src/utils/getUrlByRequestOptions.ts"],"sourcesContent":["import { Agent } from 'http'\nimport { RequestOptions, Agent as HttpsAgent } from 'https'\n\nconst debug = require('debug')('utils getUrlByRequestOptions')\n\n// Request instance constructed by the \"request\" library\n// has a \"self\" property that has a \"uri\" field. This is\n// reproducible by performing a \"XMLHttpRequest\" request in JSDOM.\nexport interface RequestSelf {\n  uri?: URL\n}\n\nexport type ResolvedRequestOptions = RequestOptions & RequestSelf\n\nexport const DEFAULT_PATH = '/'\nconst DEFAULT_PROTOCOL = 'http:'\nconst DEFAULT_HOST = 'localhost'\nconst DEFAULT_PORT = 80\nconst SSL_PORT = 443\n\nfunction getAgent(\n  options: ResolvedRequestOptions\n): Agent | HttpsAgent | undefined {\n  return options.agent instanceof Agent ? options.agent : undefined\n}\n\nfunction getProtocolByRequestOptions(options: ResolvedRequestOptions): string {\n  if (options.protocol) {\n    return options.protocol\n  }\n\n  const agent = getAgent(options)\n  const agentProtocol = (agent as RequestOptions)?.protocol\n\n  if (agentProtocol) {\n    return agentProtocol\n  }\n\n  const port = getPortByRequestOptions(options)\n  const isSecureRequest = options.cert || port === SSL_PORT\n\n  return isSecureRequest ? 'https:' : options.uri?.protocol || DEFAULT_PROTOCOL\n}\n\nfunction getPortByRequestOptions(\n  options: ResolvedRequestOptions\n): number | undefined {\n  const agent = getAgent(options)\n  const agentPort =\n    (agent as HttpsAgent)?.options.port ||\n    (agent as RequestOptions)?.defaultPort\n  const optionsPort = options.port\n\n  if (optionsPort || agentPort) {\n    const explicitPort = optionsPort || agentPort || DEFAULT_PORT\n    return Number(explicitPort)\n  }\n}\n\nfunction getHostByRequestOptions(options: ResolvedRequestOptions): string {\n  return options.hostname || options.host || DEFAULT_HOST\n}\n\nfunction getAuthByRequestOptions(options: ResolvedRequestOptions) {\n  if (options.auth) {\n    const [username, password] = options.auth.split(':')\n    return { username, password }\n  }\n}\n\n/**\n * Creates a `URL` instance from a given `RequestOptions` object.\n */\nexport function getUrlByRequestOptions(options: ResolvedRequestOptions): URL {\n  debug('request options', options)\n\n  const protocol = getProtocolByRequestOptions(options)\n  const host = getHostByRequestOptions(options)\n  const port = getPortByRequestOptions(options)\n  const path = options.path || DEFAULT_PATH\n  const auth = getAuthByRequestOptions(options)\n\n  debug('protocol', protocol)\n  debug('host', host)\n  debug('port', port)\n  debug('path', path)\n\n  const baseUrl = `${protocol}//${host}`\n  debug('base URL:', baseUrl)\n\n  const url = options.uri ? new URL(options.uri.href) : new URL(path, baseUrl)\n\n  if (port) {\n    debug('detected explicit port', port)\n    url.port = port.toString()\n  }\n\n  if (auth) {\n    debug('resolved auth', auth)\n\n    url.username = auth.username\n    url.password = auth.password\n  }\n\n  debug('created URL:', url)\n\n  return url\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}