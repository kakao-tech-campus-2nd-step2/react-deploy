{"ast":null,"code":"var _s = $RefreshSig$();\n// src/api/hooks/useGetProductDetail.ts\nimport { useSuspenseQuery } from '@tanstack/react-query';\nimport { useBackend } from '@/provider/Auth/Backend'; // useBackend 훅 사용\n\nimport { fetchInstance } from '../instance';\nexport const getProductDetailPath = productId => `/api/products/${productId}`; // 함수 추가\n\nexport const getProductDetail = async (params, baseURL) => {\n  try {\n    console.log(`Requesting product detail from ${baseURL}${getProductDetailPath(params.productId)}`);\n    const response = await fetchInstance(baseURL).get(getProductDetailPath(params.productId));\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product detail:', error);\n    throw error;\n  }\n};\nexport const useGetProductDetail = ({\n  productId\n}) => {\n  _s();\n  const {\n    backendUrl\n  } = useBackend(); // useBackend 훅 사용\n\n  return useSuspenseQuery({\n    queryKey: [getProductDetailPath(productId)],\n    queryFn: () => getProductDetail({\n      productId\n    }, backendUrl)\n  });\n};\n_s(useGetProductDetail, \"7IWQCQGHwCiAj3uckymYCHaw9Nc=\", false, function () {\n  return [useBackend, useSuspenseQuery];\n});","map":{"version":3,"names":["useSuspenseQuery","useBackend","fetchInstance","getProductDetailPath","productId","getProductDetail","params","baseURL","console","log","response","get","data","error","useGetProductDetail","_s","backendUrl","queryKey","queryFn"],"sources":["C:/Users/jihwan/projects/react-deploy/src/api/hooks/useGetProductDetail.ts"],"sourcesContent":["// src/api/hooks/useGetProductDetail.ts\r\nimport { useSuspenseQuery } from '@tanstack/react-query';\r\n\r\nimport { useBackend } from '@/provider/Auth/Backend'; // useBackend 훅 사용\r\nimport type { ProductData } from '@/types';\r\n\r\nimport { fetchInstance } from '../instance';\r\n\r\nexport type ProductDetailRequestParams = {\r\n  productId: string;\r\n};\r\n\r\ntype Props = ProductDetailRequestParams;\r\n\r\nexport type GoodsDetailResponseData = ProductData;\r\n\r\nexport const getProductDetailPath = (productId: string) => `/api/products/${productId}`; // 함수 추가\r\n\r\nexport const getProductDetail = async (params: ProductDetailRequestParams, baseURL: string) => {\r\n  try {\r\n    console.log(\r\n      `Requesting product detail from ${baseURL}${getProductDetailPath(params.productId)}`,\r\n    );\r\n    const response = await fetchInstance(baseURL).get<GoodsDetailResponseData>(\r\n      getProductDetailPath(params.productId),\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching product detail:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const useGetProductDetail = ({ productId }: Props) => {\r\n  const { backendUrl } = useBackend(); // useBackend 훅 사용\r\n\r\n  return useSuspenseQuery({\r\n    queryKey: [getProductDetailPath(productId)],\r\n    queryFn: () => getProductDetail({ productId }, backendUrl),\r\n  });\r\n};\r\n"],"mappings":";AAAA;AACA,SAASA,gBAAgB,QAAQ,uBAAuB;AAExD,SAASC,UAAU,QAAQ,yBAAyB,CAAC,CAAC;;AAGtD,SAASC,aAAa,QAAQ,aAAa;AAU3C,OAAO,MAAMC,oBAAoB,GAAIC,SAAiB,IAAM,iBAAgBA,SAAU,EAAC,CAAC,CAAC;;AAEzF,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,MAAkC,EAAEC,OAAe,KAAK;EAC7F,IAAI;IACFC,OAAO,CAACC,GAAG,CACR,kCAAiCF,OAAQ,GAAEJ,oBAAoB,CAACG,MAAM,CAACF,SAAS,CAAE,EACrF,CAAC;IACD,MAAMM,QAAQ,GAAG,MAAMR,aAAa,CAACK,OAAO,CAAC,CAACI,GAAG,CAC/CR,oBAAoB,CAACG,MAAM,CAACF,SAAS,CACvC,CAAC;IACD,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEV;AAAiB,CAAC,KAAK;EAAAW,EAAA;EAC3D,MAAM;IAAEC;EAAW,CAAC,GAAGf,UAAU,CAAC,CAAC,CAAC,CAAC;;EAErC,OAAOD,gBAAgB,CAAC;IACtBiB,QAAQ,EAAE,CAACd,oBAAoB,CAACC,SAAS,CAAC,CAAC;IAC3Cc,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAAC;MAAED;IAAU,CAAC,EAAEY,UAAU;EAC3D,CAAC,CAAC;AACJ,CAAC;AAACD,EAAA,CAPWD,mBAAmB;EAAA,QACPb,UAAU,EAE1BD,gBAAgB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}