{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeClientRequestEndArgs = void 0;\nvar debug = require('debug')('http normalizeClientRequestEndArgs');\n/**\n * Normalizes a list of arguments given to the `ClientRequest.end()`\n * method to always include `chunk`, `encoding`, and `callback`.\n */\nfunction normalizeClientRequestEndArgs() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  debug('arguments', args);\n  var normalizedArgs = new Array(3).fill(null).map(function (value, index) {\n    return args[index] || value;\n  });\n  normalizedArgs.sort(function (a, b) {\n    // If first element is a function, move it rightwards.\n    if (typeof a === 'function') {\n      return 1;\n    }\n    // If second element is a function, move the first leftwards.\n    if (typeof b === 'function') {\n      return -1;\n    }\n    // If both elements are strings, preserve their original index.\n    if (typeof a === 'string' && typeof b === 'string') {\n      return normalizedArgs.indexOf(a) - normalizedArgs.indexOf(b);\n    }\n    return 0;\n  });\n  debug('normalized args', normalizedArgs);\n  return normalizedArgs;\n}\nexports.normalizeClientRequestEndArgs = normalizeClientRequestEndArgs;","map":{"version":3,"names":["debug","require","normalizeClientRequestEndArgs","args","_i","arguments","length","normalizedArgs","Array","fill","map","value","index","sort","a","b","indexOf","exports"],"sources":["/Users/kyoungseo/Desktop/4학년/카테캠/step2/kakao-gift5/react-product-login/node_modules/@mswjs/interceptors/src/interceptors/ClientRequest/utils/normalizeClientRequestEndArgs.ts"],"sourcesContent":["const debug = require('debug')('http normalizeClientRequestEndArgs')\n\nexport type ClientRequestEndChunk = string | Buffer\ntype ClientRequestEndCallback = () => void\n\ntype HttpRequestEndArgs =\n  | []\n  | [ClientRequestEndCallback]\n  | [ClientRequestEndChunk, ClientRequestEndCallback?]\n  | [ClientRequestEndChunk, BufferEncoding, ClientRequestEndCallback?]\n\ntype NormalizedHttpRequestEndParams = [\n  ClientRequestEndChunk | null,\n  BufferEncoding | null,\n  ClientRequestEndCallback | null\n]\n\n/**\n * Normalizes a list of arguments given to the `ClientRequest.end()`\n * method to always include `chunk`, `encoding`, and `callback`.\n */\nexport function normalizeClientRequestEndArgs(\n  ...args: HttpRequestEndArgs\n): NormalizedHttpRequestEndParams {\n  debug('arguments', args)\n  const normalizedArgs = new Array(3)\n    .fill(null)\n    .map((value, index) => args[index] || value)\n\n  normalizedArgs.sort((a, b) => {\n    // If first element is a function, move it rightwards.\n    if (typeof a === 'function') {\n      return 1\n    }\n\n    // If second element is a function, move the first leftwards.\n    if (typeof b === 'function') {\n      return -1\n    }\n\n    // If both elements are strings, preserve their original index.\n    if (typeof a === 'string' && typeof b === 'string') {\n      return normalizedArgs.indexOf(a) - normalizedArgs.indexOf(b)\n    }\n\n    return 0\n  })\n\n  debug('normalized args', normalizedArgs)\n  return normalizedArgs as NormalizedHttpRequestEndParams\n}\n"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,oCAAoC,CAAC;AAiBpE;;;;AAIA,SAAgBC,6BAA6BA,CAAA;EAC3C,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAA2B,EAA3BA,EAAA,GAAAC,SAAA,CAAAC,MAA2B,EAA3BF,EAAA,EAA2B;IAA3BD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAEAJ,KAAK,CAAC,WAAW,EAAEG,IAAI,CAAC;EACxB,IAAMI,cAAc,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAChCC,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAK,OAAAT,IAAI,CAACS,KAAK,CAAC,IAAID,KAAK;EAApB,CAAoB,CAAC;EAE9CJ,cAAc,CAACM,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IACvB;IACA,IAAI,OAAOD,CAAC,KAAK,UAAU,EAAE;MAC3B,OAAO,CAAC;;IAGV;IACA,IAAI,OAAOC,CAAC,KAAK,UAAU,EAAE;MAC3B,OAAO,CAAC,CAAC;;IAGX;IACA,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;MAClD,OAAOR,cAAc,CAACS,OAAO,CAACF,CAAC,CAAC,GAAGP,cAAc,CAACS,OAAO,CAACD,CAAC,CAAC;;IAG9D,OAAO,CAAC;EACV,CAAC,CAAC;EAEFf,KAAK,CAAC,iBAAiB,EAAEO,cAAc,CAAC;EACxC,OAAOA,cAAgD;AACzD;AA7BAU,OAAA,CAAAf,6BAAA,GAAAA,6BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}